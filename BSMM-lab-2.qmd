---
title: "BSMM-lab-2"
subtitle: "BSMM 8740 Fall 2023"
author: "Meghana Ghanta"
date: "25 September2023 "
format: html
editor: visual
self-contained: true
---

## Setup

Load packages and data:

```{r}
install.packages("tidyverse")
install.packages("tidymodels")
install.packages("gt")
install.packages("gtExtras")
install.packages("DataExplorer")
```

```{}
```

```{}
```

```{r}
library(magrittr)     # the pipe
library(tidyverse)    # for data wrangling + visualization
library(tidymodels)   # for modeling
library(gt)           # for making display tables
library(gtExtras)     # helper functions for beautiful tables
library(DataExplorer) #
```

```{r load-pkg-data}
#| message: false
the_tate <- readr::read_delim("data/the-tate-collection.csv", ";", escape_double = FALSE, trim_ws = TRUE)
the_tate_artists <- readr::read_csv("data/the-tate-artists.csv")
```

## Exercises

### Exercise 1

```{r}
#dplyr::summarize(the_tate)
dplyr::glimpse(the_tate)
```

```{r}
dplyr::glimpse(the_tate)

```

```{r}
dplyr::glimpse(the_tate_artists)
```

```{r}
#uniqueartists <- the_tate_artists |>
artists<- the_tate |>
  dplyr::select(artist)  
dplyr::distinct(artists)
#uniqueartists
```

```{r}
max(the_tate_artists$yearOfBirth, na.rm = T)
min(the_tate_artists$yearOfDeath, na.rm=T)
```

```{r}
max(the_tate$acquisitionYear, na.rm=T)
min(the_tate$acquisitionYear, na.rm=T)
```

```{r}
DataExplorer::introduce(the_tate)
DataExplorer::introduce(the_tate_artists)
```

```{r}
DataExplorer::plot_missing(the_tate)
DataExplorer::plot_missing(the_tate_artists)
```

The `the_tate` dataset has 3336 unique artists who worked from 1543 to 2004. The works were acquired between the years 1823 and 2013.

### Exercise 2

```{r}
missing_dates<-
  dplyr::filter(the_tate, is.na(the_tate$year))
missing_dates
test1 <- missing_dates |>
  dplyr::distinct(missing_dates$artist)
test1
countof_artist <- nrow(test1)
```

```{r}
missing_dates_count <- the_tate |>
  group_by(artist) |>
  summarize(missing_dates = sum(is.na(date)))
```

```{r}
missingyear_counts <- artist_missing_year_counts %>%
  mutate(percentage = (missing_years / works_with_missing_years) * 100)
```

How number of works with missing dates is 5397

The number of artists whose works have missing dates is 461 .

It would require resolving missing year data for only \_\_ artists resolve resolve at least 50% of the missing data.

The missing year data likely to be classified as MAR.

### Exercise 3

```{r}
artist_work_counts <- the_tate |>
  group_by(artist) |>
  summarize(titles = n()) |>
  arrange(desc(titles))
artist_work_counts
tenth_artist <- 
  artist_work_counts$artist[10]
tenth_artist
```

The artist with the most works in the Tate collection is Turner, Joseph Mallord William

The artist with the tenth-most works in the Tate collection is Warhol, Andy.

### Exercise 4

```{r}
percentage_count <- (artist_work_counts$titles[1]/sum(artist_work_counts$titles))*100
percentage_count
```

The artist with the greatest number of works in the Tate collection represent 56.9197% of the total number of works

### Exercise 5

```{r}
tate_artist_title <- the_tate |>
  dplyr::select(artist, title)
tate_artist_title

tate_artist_title_distinct <- distinct(tate_artist_title)
tate_artist_title_distinct

num_of_duplicates <- count(tate_artist_title)-count(tate_artist_title_distinct)
num_of_duplicates
```

There are 23705 duplicate artist-title pairs

### Exercise 6

```{r}
install.packages("tidyr")
library(tidyr)
```

```{r}
the_tate <- the_tate |>
  dplyr::mutate(areacm = (width*height)/100)

```

```{r}
area_tate <- the_tate|>
  dplyr::select(artist, title, areacm)
area_tate <- na.omit(area_tate)

desc_area_tate <- area_tate |>
  dplyr::arrange(desc(areacm))

largest_work <- desc_area_tate |>
  dplyr::slice_head(n=1)
smallest_work <- desc_area_tate |>
  dplyr::slice_tail(n=1)
largest_work
smallest_work

```

The artist with the largest work in the tate collection is Therrien, Robert

The artist with the smallest work in the collection is Mesens, E.L . The smallest work has area 2.37 $\text{cm}^2$

### Exercise 7

```{r}
the_tate_join <- the_tate|>
  dplyr::left_join(the_tate_artists, by=c("artist" = "name"))
the_tate_join1 <-the_tate_join|>
  dplyr::filter(!is.na(gender))
the_tate_group <- the_tate_join1 |>
  dplyr::group_by(gender)
the_tate_group

```

### Exercise 8

```{r}
SPX_Data <- read.csv("data/SPX_HistoricalData_1692322132002.csv")
```

```{r}
dplyr::glimpse(SPX_Data)

```

```{r}
SPX_Data <- SPX_Data |>
  dplyr::mutate(year=format(as.Date(SPX_Data$Date, format="%m/%d/%Y"),"%Y"))

SPX_Data <- SPX_Data |>
  dplyr::rename(cl="Close.Last")

SPX_Data <- SPX_Data %>%
  dplyr::mutate(rd = log((cl) / lag(cl)))


SPX_Data <- SPX_Data |>
  dplyr::mutate(daily_return_rd=log((cl)/(cl)))
SPX_Data <- SPX_Data |>
  dplyr::mutate(varience=daily_return_rd^2)
```

The annual return in the SPX price in 2020 was \_\_\_%.

The corresponding price volatility was \_\_\_%.

### Exercise 9

The period volatility was \_\_\_.\_%

### 
